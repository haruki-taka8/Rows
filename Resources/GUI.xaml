<Window Name="Rows"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Title="Rows" Height="600" Width="1400"
        FontFamily="{Binding FontFamily, FallbackValue='Courier New'}" FontSize="16">

    <Window.Resources>
        <!-- Styles -->
        <Style TargetType="Thumb">
            <Setter Property="Width" Value="8"/>
            <Setter Property="Cursor" Value="SizeWE"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Thumb">
                        <Border Background="Transparent"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="CheckBox">
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>

        <Style x:Key="Caption" TargetType="TextBlock">
            <Setter Property="Foreground" Value="#696969"/>
            <Setter Property="FontSize" Value="14"/>
        </Style>

        <Style x:Key="CommonDisableSave" TargetType="FrameworkElement">
            <Style.Triggers>
                <DataTrigger Binding="{Binding ElementName=Grid, Path=Items.Count}" Value="0">
                    <Setter Property="IsEnabled" Value="False"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding ElementName=ReadWrite, Path=IsChecked}" Value="False">
                    <Setter Property="IsEnabled" Value="False"/>
                </DataTrigger>
            </Style.Triggers>
            <Setter Property="Margin" Value="4,0"/>
        </Style>

        <Style x:Key="CommonDisableEdit" TargetType="FrameworkElement" BasedOn="{StaticResource CommonDisableSave}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding ElementName=Grid, Path=SelectedItems.Count}" Value="0">
                    <Setter Property="IsEnabled" Value="False"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>

    <Grid Margin="16,8">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="26"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="4*"/>
            <ColumnDefinition Width="{Binding PreviewWidth, FallbackValue='*'}"/>
        </Grid.ColumnDefinitions>

        <!-- Toolbar (top) -->
        <Grid Grid.ColumnSpan="2" Margin="-16,-8,-16,8" Background="#EEEEEE">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="72"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <Expander Grid.ColumnSpan="2" Margin="24,14,0,0">
                <Expander.Style>
                    <Style TargetType="Expander">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ElementName=Status, Path=Text}" Value="Editing">
                                <Setter Property="IsExpanded" Value="True"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Expander.Style>
                <Grid Height="84" Margin="0,16,15,8">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <TextBlock Text="ALIASING" Style="{StaticResource Caption}"/>
                    <CheckBox Grid.Row="1" Content=" Input" Name="InputAlias" IsChecked="{Binding InputAlias}"/>
                    <CheckBox Grid.Row="2" Content=" Output" Name="OutputAlias" IsChecked="{Binding OutputAlias}"/>

                    <TextBlock Grid.Column="1" Text="EDITING" Style="{StaticResource Caption}"/>
                    <CheckBox Grid.Column="1" Grid.Row="1" Name="ReadWrite" Content=" Allow Edits" VerticalAlignment="Center">
                        <CheckBox.Style>
                            <Style TargetType="CheckBox">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding OutputAlias}" Value="True">
                                        <Setter Property="IsEnabled" Value="False"/>
                                        <Setter Property="IsChecked" Value="False"/>
                                    </DataTrigger>
                                </Style.Triggers>
                                <Setter Property="IsEnabled" Value="True"/>
                                <Setter Property="IsChecked" Value="{Binding ReadWrite}"/>
                            </Style>
                        </CheckBox.Style>
                    </CheckBox>
                    <CheckBox Grid.Row="2" Grid.Column="1" Content=" Template Rows" IsChecked="{Binding IsTemplate}" IsEnabled="{Binding ElementName=ReadWrite, Path=IsChecked}"/>

                    <UniformGrid Grid.Row="2" Grid.Column="2" Columns="2">
                        <Button Name="Undo" Content="Undo" Margin="0,0,4,0" Style="{StaticResource CommonDisableEdit}" IsEnabled="False"/>
                        <Button Name="Redo" Content="Redo" Margin="0,0,4,0" Style="{StaticResource CommonDisableEdit}" IsEnabled="False"/>
                    </UniformGrid>

                    <CheckBox Grid.Row="1" Grid.Column="3" Grid.ColumnSpan="2" Content=" Insert Selected Count" IsChecked="{Binding InsertSelectedCount}" IsEnabled="{Binding ElementName=ReadWrite, Path=IsChecked}" Margin="4,0"/>
                    <ToggleButton Name="Insert" Grid.Row="2" Grid.Column="3" Content="Insert" Margin="4,0" IsEnabled="{Binding ElementName=ReadWrite, Path=IsChecked}"/>
                    <Popup PlacementTarget="{Binding ElementName=Insert}" IsOpen="{Binding ElementName=Insert, Path=IsChecked}" StaysOpen="False">
                        <StackPanel Width="{Binding ElementName=Insert, Path=ActualWidth}">
                            <StackPanel.Resources>
                                <Style TargetType="Button">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding ElementName=Grid, Path=SelectedItems.Count}" Value="0">
                                            <Setter Property="IsEnabled" Value="False"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding InsertSelectedCount}" Value="False">
                                            <Setter Property="IsEnabled" Value="True"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                    <Setter Property="Height" Value="30"/>
                                </Style>
                            </StackPanel.Resources>
                            <Button Name="InsertTop" Content="Insert Top"/>
                            <Button Name="InsertAbove" Content="Insert Above" Style="{StaticResource CommonDisableEdit}" Height="30" Margin="0"/>
                            <Button Name="InsertBelow" Content="Insert Below" Style="{StaticResource CommonDisableEdit}" Height="30" Margin="0"/>
                            <Button Name="InsertLast" Content="Insert Last"/>
                        </StackPanel>
                    </Popup>
                    <Button Grid.Row="2" Grid.Column="4" Name="Remove" Content="Delete" Style="{StaticResource CommonDisableEdit}"/>
                    <Button Grid.Row="2" Grid.Column="5" Name="Commit" Content="Save">
                        <Button.Style>
                            <Style TargetType="Button" BasedOn="{StaticResource CommonDisableSave}">
                                <Setter Property="IsEnabled" Value="False"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ElementName=Rows, Path=Title}" Value="*Rows">
                                        <Setter Property="IsEnabled" Value="True"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding ElementName=ReadWrite, Path=IsChecked}" Value="False">
                                        <Setter Property="IsEnabled" Value="False"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>

                    <TextBlock Grid.Column="7" Text="SELECTION" Style="{StaticResource Caption}"/>
                    <Button Grid.Column="7" Grid.Row="1" Name="CopyRow" Content="Copy Row" Margin="0,-2,0,2">
                        <Button.Style>
                            <Style TargetType="Button">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding CopyRowFormat}" Value="">
                                        <Setter Property="IsEnabled" Value="False"/>
                                    </DataTrigger>
                                </Style.Triggers>
                                <Setter Property="IsEnabled" Value="True"/>
                            </Style>
                        </Button.Style>
                    </Button>
                    <Button Grid.Column="7" Grid.Row="2" Name="CopyImage" Content="Copy Image">
                        <Button.Style>
                            <Style TargetType="Button">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ElementName=Preview, Path=Source}" Value="{x:Null}">
                                        <Setter Property="IsEnabled" Value="False"/>
                                    </DataTrigger>
                                </Style.Triggers>
                                <Setter Property="IsEnabled" Value="True"/>
                            </Style>
                        </Button.Style>
                    </Button>
                </Grid>
            </Expander>

            <DockPanel Grid.Column="1" Margin="8,8,16,8" Height="36" VerticalAlignment="Top">
                <Button Name="Filter" DockPanel.Dock="Right" Content="Filter" Height="24" Padding="96,0,96,0">
                    <Button.Style>
                        <Style TargetType="Button">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ElementName=Status, Path=Text}" Value="Filtering">
                                    <Setter Property="IsEnabled" Value="False"/>
                                </DataTrigger>
                            </Style.Triggers>
                            <Setter Property="IsEnabled" Value="True"/>
                        </Style>
                    </Button.Style>
                </Button>
                <Grid Margin="0,0,8,0">
                    <TextBlock Foreground="#696969" Background="White" Height="24" Padding="7,3">
                        <TextBlock.Style>
                            <Style TargetType="TextBlock">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ElementName=FilterBar, Path=Text}" Value="">
                                        <Setter Property="Text" Value="Enter filter criteria"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                    <TextBox Name="FilterBar" AcceptsReturn="True" VerticalContentAlignment="Center" Height="24" Padding="4,0" Background="Transparent"/>
                </Grid>
            </DockPanel>
        </Grid>

        <ProgressBar Grid.ColumnSpan="2" Margin="-18,4" Height="4" VerticalAlignment="Bottom" Background="Transparent" BorderThickness="0">
            <ProgressBar.Style>
                <Style TargetType="ProgressBar">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding ElementName=Status, Path=Text}" Value="Filtering">
                            <Setter Property="Visibility" Value="Visible"/>
                            <Setter Property="IsIndeterminate" Value="True"/>
                        </DataTrigger>
                    </Style.Triggers>
                    <Setter Property="Visibility" Value="Hidden"/>
                    <Setter Property="IsIndeterminate" Value="False"/>
                </Style>
            </ProgressBar.Style>
        </ProgressBar>

        <!-- Empty Grid messages (left) -->
        <TextBlock Grid.Row="1" VerticalAlignment="Center" TextAlignment="Center" LineHeight="20">
            <TextBlock.Style>
                <Style TargetType="TextBlock" BasedOn="{StaticResource Caption}">
                    <Setter Property="Visibility" Value="Hidden"/>
                    <Setter Property="Text" Value="Filtering&#x0a;Please await pending results"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding ElementName=Grid, Path=Items.Count}" Value="0">
                            <Setter Property="Visibility" Value="Visible"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding ElementName=Status, Path=Text}" Value="Ready">
                            <Setter Property="Text" Value="No results&#x0a;Try a different filter term or add new rows"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </TextBlock.Style>
        </TextBlock>

        <!-- DataGrid (left) -->
        <DataGrid Name="Grid" Grid.Row="1" AutoGenerateColumns="False" Margin="0,8,0,0"
            Background="Transparent" GridLinesVisibility="None" BorderThickness="0"
            RowHeaderWidth="10" MinRowHeight="25" FrozenColumnCount="{Binding FrozenColumn}"
            CanUserAddRows="False" CanUserDeleteRows="False"
            EnableColumnVirtualization="True" EnableRowVirtualization="True">
            <DataGrid.RowHeaderStyle>
                <Style TargetType="DataGridRowHeader">
                    <Setter Property="Background" Value="Transparent" />
                </Style>
            </DataGrid.RowHeaderStyle>
            <DataGrid.Resources>
                <Style TargetType="DataGrid">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding ElementName=ReadWrite, Path=IsChecked}" Value="True">
                            <Setter Property="IsReadOnly" Value="False"/>
                        </DataTrigger>
                    </Style.Triggers>
                    <Setter Property="IsReadOnly" Value="True"/>
                </Style>
                <Style TargetType="Button" x:Key="{ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle, TypeInTargetAssembly={x:Type DataGrid}}">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="Button">
                                <Border Background="{TemplateBinding Background}" BorderThickness="0">
                                    <ContentPresenter/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Background" Value="Transparent"/>
                    <Style.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="Transparent"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#CCE8FF"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
                <Style TargetType="DataGridRow">
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#F5F5F5"/>
                        </Trigger>
                    </Style.Triggers>
                    <Style.Resources>
                        <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="#CCE8FF"/>
                        <SolidColorBrush x:Key="{x:Static SystemColors.ControlBrushKey}" Color="#E5F3FF"/>
                        <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}" Color="#000000"/>
                    </Style.Resources>
                </Style>
                <Style TargetType="DataGridColumnHeader">
                    <Setter Property="MinWidth" Value="128"/>
                    <Setter Property="Height" Value="32"/>
                    <Setter Property="FontSize" Value="14"/>
                    <Setter Property="Foreground" Value="#696969"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="DataGridColumnHeader">
                                <Grid>
                                    <Border Name="BRIN" CornerRadius="1" Padding="4,4,4,2" BorderThickness="0">
                                        <ContentPresenter/>
                                    </Border>
                                    <Path Name="SortArrow" Stroke="#696969" Data="M0,0 L4,4 L8,0" Visibility="Collapsed"
                                          HorizontalAlignment="Center" VerticalAlignment="Top" RenderTransformOrigin="0.5,0.5"/>
                                    <Thumb x:Name="PART_LeftHeaderGripper" HorizontalAlignment="Left"/>
                                    <Thumb x:Name="PART_RightHeaderGripper" HorizontalAlignment="Right"/>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="SortDirection" Value="Ascending">
                                        <Setter TargetName="SortArrow" Property="Visibility" Value="Visible"/>
                                        <Setter TargetName="SortArrow" Property="RenderTransform">
                                            <Setter.Value>
                                                <TransformGroup>
                                                    <ScaleTransform ScaleY="-1"/>
                                                </TransformGroup>
                                            </Setter.Value>
                                        </Setter>
                                    </Trigger>
                                    <Trigger Property="SortDirection" Value="Descending">
                                        <Setter TargetName="SortArrow" Property="Visibility" Value="Visible"/>
                                    </Trigger>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter TargetName="BRIN" Property="Border.Background" Value="#E5F3FF"/>
                                    </Trigger>
                                    <Trigger Property="IsPressed" Value="True">
                                        <Setter TargetName="BRIN" Property="Border.Background" Value="#CCE8FF"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </DataGrid.Resources>
        </DataGrid>

        <!-- Preview image (right) -->
        <TextBlock Grid.Row="1" Grid.Column="1" Text="No preview available" Style="{StaticResource Caption}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
        <Image Grid.Row="1" Grid.Column="1" Name="Preview"/>
        <GridSplitter Grid.Row="1" Grid.Column="1" Width="8" Background="Transparent" HorizontalAlignment="Left"/>

        <!-- Status bar (bottom) -->
        <TextBlock Grid.Row="2" VerticalAlignment="Bottom" Style="{StaticResource Caption}">
            <TextBlock.Text>
                <MultiBinding StringFormat="{}{0} of {1} selected">
                    <Binding ElementName="Grid" Path="SelectedItems.Count"/>
                    <Binding ElementName="Grid" Path="Items.Count"/>
                </MultiBinding>
            </TextBlock.Text>
        </TextBlock>
        <TextBlock Grid.Row="2" Grid.ColumnSpan="2" VerticalAlignment="Bottom" Name="Status" Style="{StaticResource Caption}" HorizontalAlignment="Right"/>

        <!-- Splashscreen -->
        <Label Content="Rows 22.12" FontWeight="Bold" Name="Splashscreen" Background="White" Margin="-18,-16" Visibility="Hidden" 
               Grid.RowSpan="3" Grid.ColumnSpan="2" HorizontalContentAlignment="Center" VerticalContentAlignment="Center"/>

        <!-- New file -->
        <StackPanel Margin="-18,-16" Grid.RowSpan="3" Grid.ColumnSpan="2" Background="White" Name="NewFileScreen" Visibility="Hidden" HorizontalAlignment="Stretch">
            <TextBlock Text="Create a New File" FontWeight="Bold" Margin="32"/>
            <TextBlock Text="Rows cannot read the specified CSV file." Style="{StaticResource Caption}" Margin="32,2"/>
            <TextBlock Text="Use this wizard to create a new file." Style="{StaticResource Caption}" Margin="32,2"/>

            <TextBlock Text="Filename" Margin="32,64,0,0"/>
            <TextBox Text="{Binding CsvPath}" IsEnabled="False" Margin="32,4,32,0" Height="24" Width="512" HorizontalAlignment="Left" VerticalContentAlignment="Center"/>

            <StackPanel Orientation="Horizontal" Margin="32,32,0,0">
                <TextBlock Text="Columns"/>
                <TextBlock Text="Separate fields with commas" Style="{StaticResource Caption}" Margin="32,0,0,0" VerticalAlignment="Bottom"/>
            </StackPanel>
            <TextBox Name="Column" Margin="32,4,32,0" Height="24" Width="512" HorizontalAlignment="Left" VerticalContentAlignment="Center"/>

            <Button Name="NewFile" Content="Create" Margin="32,64,0,0" Height="24" Width="512" HorizontalAlignment="Left"/>
        </StackPanel>
    </Grid>
</Window>